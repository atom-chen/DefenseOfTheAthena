{"version":3,"sources":["assets\\script\\framework\\clog\\Clog.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Time } from \"../time/Time\";\n\nlet debug = CC_DEBUG;\n\nexport class ClogKey {\n    public static Res = \"Res\"\n    public static UI = \"UI\"\n    public static LocalStorage = \"LocalStorage\"\n    public static Net = \"Net\"\n    public static Entry = \"Entry\"\n    public static Api = \"Api\"\n    public static Login = \"Login\"\n    public static Http = \"Http\"\n}\n\n\nexport default class Clog {\n    public static Tags: Array<string> = new Array<string>();\n\n\n    public static Init() {\n        this.OpenTag(ClogKey.Res)\n        this.OpenTag(ClogKey.UI)\n        this.OpenTag(ClogKey.LocalStorage)\n        this.OpenTag(ClogKey.Net)\n        this.OpenTag(ClogKey.Entry)\n        this.OpenTag(ClogKey.Api)\n        this.OpenTag(ClogKey.Login)\n        this.OpenTag(ClogKey.Http)\n    }\n\n    public static OpenTag(tag) {\n        if (this.Tags.indexOf(tag) < 0) {\n            this.Tags.push(tag)\n        }\n    }\n\n    public static Obj(tag?: string, ...msg: any[]) {\n        if (!debug) {\n            return;\n        }\n\n        //标记没有打开，不打印该日志\n        if (this.Tags.indexOf(tag) < 0) {\n            return;\n        }\n        msg.unshift('【' + Time.Format(new Date()) + '】' + '【' + tag + '】');\n        cc.log(\"%c tag\", \"color:#ff1493;\", [].slice.call(msg));\n    }\n\n    //无颜色\n    public static Trace(tag: string, msg: any) {\n        this.print(tag, this.GetString(msg), \"\")\n    }\n\n    //红色\n    public static Red(tag: string, msg: any) {\n        this.print(tag, this.GetString(msg), \"color:red;\")\n    }\n\n    //绿色\n    public static Green(tag: string, msg) {\n        this.print(tag, this.GetString(msg), \"color:green;\")\n    }\n\n    //橙色\n    public static Orange(tag: string, msg) {\n        this.print(tag, this.GetString(msg), \"color:#ee7700;\")\n    }\n\n    //灰色\n    public static Gray(tag: string, msg) {\n        this.print(tag, this.GetString(msg), \"color:gray;\")\n    }\n\n    //蓝色\n    public static Blue(tag: string, msg) {\n        this.print(tag, this.GetString(msg), \"color:#3a5fcd;\")\n    }\n\n    //紫色\n    public static Purple(tag: string, msg) {\n        this.print(tag, this.GetString(msg), \"color:#b23aee;\")\n    }\n\n    //深粉色\n    public static DeepPink(tag, msg) {\n        this.print(tag, this.GetString(msg), \"color:#ff1493;\")\n    }\n\n    private static GetString(msg) {\n        return (!Array.isArray(msg) && typeof msg === 'object') ? JSON.stringify(msg) : msg;\n    }\n\n    private static print(tag, msg, color) {\n        if (!debug) {\n            return;\n        }\n\n        //标记没有打开，不打印该日志\n        if (this.Tags.indexOf(tag) < 0) {\n            return;\n        }\n        var backLog = console.log || cc.log;\n        backLog.call(this, \"%c%s:\" + cc.js.formatStr.apply(cc, [msg]), color, '【' + Time.Format(new Date()) + '】' + '【' + tag + '】');\n    }\n\n    public static Warn(tag?: string, ...msg: any[]) {\n        msg.unshift('【' + Time.Format(new Date()) + '】' + '【' + tag + '】');\n        cc.warn.apply(null, [].slice.call(msg));\n    }\n\n    public static Error(msg: any) {\n        cc.error('【' + Time.Format(new Date()) + '】' + msg);\n    }\n\n}"]}