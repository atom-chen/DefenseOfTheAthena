{"version":3,"sources":["assets\\script\\framework\\audio\\AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\r\nimport { IsNullOrEmpty } from \"../util/StringUtil\";\r\nimport Clog from \"../clog/Clog\";\r\nimport { LocalStorage } from \"../storage/LocalStorage\";\r\nimport { ResManager } from \"../res/ResManager\";\r\n\r\n\r\nexport class AudioManager {\r\n\r\n    private static EffectSoundList: Map<string, Array<number>>;\r\n\r\n    //初始化\r\n    public static Init() {\r\n        this.EffectSoundList = new Map<string, Array<number>>();\r\n        cc.audioEngine.setMusicVolume(LocalStorage.MusicVolume)\r\n        cc.audioEngine.setEffectsVolume(LocalStorage.SoundVolume)\r\n    }\r\n\r\n    //播放音乐 \r\n    public static PlayMusic(name: string, isLoop: boolean = true, callBack: Function = null) {\r\n        if (IsNullOrEmpty(name)) {\r\n            return;\r\n        }\r\n\r\n        ResManager.LoadRes(name, cc.AudioClip, (err: Error, clip: cc.AudioClip) => {\r\n            if (err) {\r\n                Clog.Error(\"Load Music error! Music name= \" + name + \",err:\" + JSON.stringify(err));\r\n                return;\r\n            }\r\n            let MusicId = cc.audioEngine.playMusic(clip, isLoop);\r\n            cc.audioEngine.setFinishCallback(MusicId, () => {\r\n                if (callBack) {\r\n                    callBack();\r\n                }\r\n            })\r\n            return;\r\n        })\r\n    }\r\n\r\n    //关闭音乐\r\n    public static StopMusic() {\r\n        cc.audioEngine.stopMusic();\r\n    }\r\n\r\n    //播放音效\r\n    public static PlaySound(name: string) {\r\n        if (IsNullOrEmpty(name)) {\r\n            return;\r\n        }\r\n        if (LocalStorage.SoundVolume <= 0.01) {\r\n            return;\r\n        }\r\n\r\n        // 获取播放分组\r\n        let SoundList = this.EffectSoundList.get(name);\r\n        if (!SoundList) {\r\n            SoundList = new Array<number>();\r\n            this.EffectSoundList.set(name, SoundList);\r\n        }\r\n\r\n        // 每个声音播放最小间隔\r\n        let now = new Date().getTime();\r\n        if (SoundList.length > 0) {\r\n            if (now - SoundList[0] < 150)\r\n                return;\r\n        }\r\n\r\n        // 清除播放时间大于1000毫秒的声音\r\n        while (SoundList.length > 0) {\r\n            if (now - SoundList[0] > 500)\r\n                SoundList.shift();\r\n            else\r\n                break;\r\n        }\r\n\r\n        // 同时存在声音数\r\n        if (SoundList.length > 7) {\r\n            return;\r\n        }\r\n\r\n        SoundList.push(now);\r\n        ResManager.LoadRes(name, cc.AudioClip, (err: Error, clip: cc.AudioClip) => {\r\n            if (err) {\r\n                Clog.Error(\"Load Music error! Music name= \" + name + \",err:\" + JSON.stringify(err));\r\n                return;\r\n            }\r\n            cc.audioEngine.playEffect(clip, false);\r\n            return;\r\n        })\r\n    }\r\n\r\n    //通过声音Id关闭音效\r\n    public static StopSound(audioId: number) {\r\n        if (audioId < 0) {\r\n            return;\r\n        }\r\n        cc.audioEngine.stopEffect(audioId)\r\n    }\r\n\r\n    // 关闭所有循环的音频\r\n    public static StopAllSounds() {\r\n        cc.audioEngine.stopAllEffects()\r\n    }\r\n\r\n    //设置音效大小\r\n    public static SetSoundVolume(value: number) {\r\n        cc.audioEngine.setEffectsVolume(value)\r\n    }\r\n\r\n    //设置音乐大小\r\n    public static SetMusicVolume(value: number) {\r\n        cc.audioEngine.setMusicVolume(value)\r\n    }\r\n}\r\n\r\n"]}