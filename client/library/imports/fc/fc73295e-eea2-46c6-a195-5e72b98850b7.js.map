{"version":3,"sources":["assets\\script\\battle\\map\\view\\UIMap.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,uDAAsD;AACtD,qDAA6D;AAC7D,gDAA+C;AAC/C,qCAAoC;AAIpC;IAA2B,yBAAM;IAAjC;QAAA,qEAsCC;QApCU,gBAAU,GAAG,SAAS,CAAA;;IAoCjC,CAAC;IA7BG,qBAAK,GAAL;QACI,cAAI,CAAC,KAAK,CAAC,cAAO,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,wBAAQ,GAAhB;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,KAAK,EAAW,CAAC;QACvC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,qBAAS,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;YACjD,IAAM,OAAO,GAAG,qBAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnC,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;gBAC3C,IAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;gBACxB,IAAI,EAAE,IAAI,CAAC,EAAE;oBACT,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;oBACrC,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAO,CAAC,CAAA;oBACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;oBACzB,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9B;aACJ;SACJ;QACD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;IAC9B,CAAC;IAEO,yBAAS,GAAjB;IAEA,CAAC;IAEL,YAAC;AAAD,CAtCA,AAsCC,CAtC0B,eAAM,GAsChC;AAtCY,sBAAK","file":"","sourceRoot":"/","sourcesContent":["import { UIBase } from \"../../../framework/ui/UIBase\";\nimport Clog, { ClogKey } from \"../../../framework/clog/Clog\";\nimport { ConfigMap } from \"../modle/ConfigMap\";\nimport { MapCell } from \"./MapCell\";\n\n\n\nexport class UIMap extends UIBase {\n\n    public PrefabName = \"P_UIMap\"\n\n    private _item: cc.Node;\n    // private _grid: cc.Node;\n    private allMapItem: Array<MapCell>\n\n\n    start() {\n        Clog.Green(ClogKey.UI, \"ui map start\");\n        this.initRoot();\n        this.initEvent();\n    }\n\n    private initRoot() {\n        this._item = cc.find(\"Item\", this.node)\n        this.allMapItem = new Array<MapCell>();\n        for (let row = 0; row < ConfigMap.Map.length; row++) {\n            const RowItem = ConfigMap.Map[row];\n            for (let col = 0; col < RowItem.length; col++) {\n                const id = RowItem[col];\n                if (id != 0) {\n                    let node = cc.instantiate(this._item)\n                    let item = node.addComponent(MapCell)\n                    node.setParent(this.node)\n                    item.Init(id, row, col);\n                    this.allMapItem.push(item);\n                }\n            }\n        }\n        this._item.active = false;\n    }\n\n    private initEvent() {\n\n    }\n\n}"]}