{"version":3,"sources":["assets\\script\\framework\\res\\ResUtil.ts"],"names":[],"mappings":";;;;;;AAAA,qCAA6C;AAE7C,2CAA0C;AAC1C,iDAAgE;AAGhE;IAAA;IAsDA,CAAC;IAnDG,QAAQ;IACM,oBAAY,GAA1B,UAA2B,IAAY,EAAE,GAAc;QACnD,IAAI,0BAAa,CAAC,IAAI,CAAC,EAAE;YACrB,cAAI,CAAC,IAAI,CAAC,cAAO,CAAC,GAAG,EAAE,wBAAwB,GAAG,IAAI,CAAC,CAAC;YACxD,OAAO;SACV;QAED,IAAI,CAAC,wBAAW,CAAC,IAAI,CAAC,EAAE;YACpB,OAAO;SACV;QACD,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;QAC1C,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,UAAC,GAAG,EAAE,GAAG;YACnD,IAAI,GAAG,EAAE;gBACL,cAAI,CAAC,IAAI,CAAC,cAAO,CAAC,GAAG,EAAE,8BAA8B,GAAG,GAAG,CAAC,CAAC;gBAC7D,OAAO;aACV;YACD,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;gBAClB,cAAI,CAAC,KAAK,CAAC,6CAA6C,CAAC,CAAA;gBACzD,OAAO;aACV;YACD,IAAI,WAAW,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC1C,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;IACQ,oBAAY,GAA1B,UAA2B,IAAY,EAAE,MAAiB;QACtD,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,OAAO;SACV;QAED,IAAI,0BAAa,CAAC,IAAI,CAAC,EAAE;YACrB,cAAI,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAA;YACzC,OAAO;SACV;QAED,IAAI,MAAM,CAAC,WAAW,IAAI,IAAI,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE;YAC/D,OAAO;SACV;QAED,uBAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,WAAW,EAAE,UAAC,KAAY,EAAE,GAAmB;YACvE,IAAI,KAAK,EAAE;gBACP,cAAI,CAAC,KAAK,CAAC,4BAA4B,GAAG,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;gBAChF,OAAO;aACV;YACD,IAAI,MAAM,CAAC,OAAO,EAAE;gBAChB,MAAM,CAAC,WAAW,GAAG,GAAG,CAAC;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,cAAC;AAAD,CAtDA,AAsDC,IAAA","file":"","sourceRoot":"/","sourcesContent":["import Clog, { ClogKey } from \"../clog/Clog\";\r\n\r\nimport { ResManager } from \"./ResManager\";\r\nimport { CheckNetUrl, IsNullOrEmpty } from \"../util/StringUtil\";\r\n\r\n\r\nexport default class ResUtil {\r\n\r\n\r\n    //加载网络图片\r\n    public static LoadNetImage(path: string, obj: cc.Sprite) {\r\n        if (IsNullOrEmpty(path)) {\r\n            Clog.Warn(ClogKey.Res, \"LoadNetImg Path Error:\" + path);\r\n            return;\r\n        }\r\n\r\n        if (!CheckNetUrl(path)) {\r\n            return;\r\n        }\r\n        let index = path.lastIndexOf('/');\r\n        let headUrl = path.slice(0, index) + '/0';\r\n        cc.loader.load({ url: headUrl, type: 'jpg' }, (err, pic) => {\r\n            if (err) {\r\n                Clog.Warn(ClogKey.Res, 'LoadNetImg load error,error:' + err);\r\n                return;\r\n            }\r\n            if (obj.node == null) {\r\n                Clog.Error('LoadNetImg load error>>>>>>>>obj.node==null')\r\n                return;\r\n            }\r\n            let spriteFrame = new cc.SpriteFrame(pic);\r\n            obj.spriteFrame = spriteFrame;\r\n        });\r\n    }\r\n\r\n    //改变图片\r\n    public static ChangeSprite(name: string, sprite: cc.Sprite) {\r\n        if (sprite == null) {\r\n            return;\r\n        }\r\n\r\n        if (IsNullOrEmpty(name)) {\r\n            Clog.Error('ChangeSprite name is Empty!')\r\n            return;\r\n        }\r\n\r\n        if (sprite.spriteFrame != null && sprite.spriteFrame.name == name) {\r\n            return;\r\n        }\r\n\r\n        ResManager.LoadRes(name, cc.SpriteFrame, (error: Error, res: cc.SpriteFrame) => {\r\n            if (error) {\r\n                Clog.Error('ChangeSprite Error!, name:' + name + \",err\" + JSON.stringify(error))\r\n                return;\r\n            }\r\n            if (sprite.isValid) {\r\n                sprite.spriteFrame = res;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n"]}