{"version":3,"sources":["assets\\script\\commonUI\\UITip.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iDAAgD;AAChD,uDAAsD;AACtD,iDAAyD;AAKzD;IAA2B,yBAAM;IAAjC;QAAA,qEA6BC;QAdU,gBAAU,GAAW,SAAS,CAAA;QAC9B,mBAAa,GAAoB,wBAAe,CAAC,GAAG,CAAC;;IAahE,CAAC;IAxBG;;;;OAIG;IACiB,UAAI,GAAxB,UAAyB,OAAoB,EAAE,QAAuC;QAA7D,wBAAA,EAAA,YAAoB;QAAE,yBAAA,EAAA,WAAmB,KAAK,CAAC,cAAc;;;;;4BACtE,qBAAM,qBAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAA;;wBAArC,KAAK,GAAG,SAAsC;wBAClD,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;;;;KACnC;IAOD,qBAAK,GAAL;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IAC1E,CAAC;IAEO,sBAAM,GAAd,UAAe,OAAe,EAAE,QAAgB;QAC5C,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,cAAQ,qBAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC;IAzBa,oBAAc,GAAG,GAAG,CAAC,CAAC,GAAG;IACzB,mBAAa,GAAG,CAAC,CAAC;IA0BpC,YAAC;CA7BD,AA6BC,CA7B0B,eAAM,GA6BhC;AA7BY,sBAAK","file":"","sourceRoot":"/","sourcesContent":["import { UIBase } from \"../framework/ui/UIBase\";\nimport { UIManager } from \"../framework/ui/UIManager\";\nimport { EnumUIHierarchy } from \"../framework/ui/UIEnum\";\n\n\n\n\nexport class UITip extends UIBase {\n\n    public static DURATION_SHORT = 2.5; //s\n    public static DURATION_LONG = 5;\n\n    /**\n     * 提供打开该界面的API静态方法,方便直接调用\n     * @param content 文字内容\n     * @param duration 秒\n     */\n    public static async Info(content: string = '', duration: number = UITip.DURATION_SHORT) {\n        let toast = await UIManager.OpenUI(UITip) as UITip;\n        toast.OnOpen(content, duration);\n    }\n\n    public PrefabName: string = \"P_UITip\"\n    public HierarchyType: EnumUIHierarchy = EnumUIHierarchy.Tip;\n\n    private _content: cc.Label;\n\n    start() {\n        this._content = cc.find(\"bg/Label\", this.node).getComponent(cc.Label);\n    }\n\n    private OnOpen(content: string, duration: number) {\n        this._content.string = content;\n        this.scheduleOnce(() => { UIManager.CloseUI(UITip); }, duration);\n    }\n\n}"]}